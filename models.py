from pydantic import BaseModel, Field
from enum import Enum
from typing import Union, List

#___–ü–ï–†–ï–ß–ò–°–õ–ï–ù–ò–Ø___

class Importance(str, Enum):
    low = "–Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
    medium = "—Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
    high = "–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
    extremly = "—á—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
    
class TaskStatus(str, Enum):
    raw = "–Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è‚ùå"
    running = "–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—èüîÑ"
    solved = "–≤—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ"

#___–¢–µ–ª–∞___

class CreateTask(BaseModel):
    name: str = Field(
        ...,
        min_length = 1,
        max_length = 100,
        description = "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤)"
    )
    
    time: int = Field(
        ...,
        ge = 1,
        le = 100,
        description = "–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –¥–Ω—è—Ö"
    )
    
    importance: Importance = Field(
        Importance.medium,
        description = "–í–∞–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—á–∏ –≤ enum (low, medium, high, extremely)"
    )
    
    status: TaskStatus = Field(
        TaskStatus.raw,
        description = "–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ enum (–Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è‚ùå, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—èüîÑ, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ)"
    )

class UpdateTask(BaseModel):
    name: str | None = Field(
        None,
        min_length = 1,
        max_length = 100,
        description = "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤)"
    )
    
    time: int | None = Field(
        None,
        ge = 1,
        le = 100,
        description = "–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –¥–Ω—è—Ö"
    )
    
    importance: Importance | None = Field(
        None,
        description = "–í–∞–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—á–∏ –≤ enum (low, medium, high, extremely)"
    )
    
    status: TaskStatus | None = Field(
        None,
        description = "–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ enum (–Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è‚ùå, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—èüîÑ, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ)"
    )

class Task(CreateTask):
    id: int
    